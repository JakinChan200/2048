"inline" in the header hints at the compiler to try to embed the function instead of calling it. Great for small functions that are called frequently

ULL as the suffix of a numeric literal makes it an unsigned long long

printf vs cout
    printf and cout are seperate, but printf is faster because it is lower level and doesn't do error checking. 
    Synchronization between the two makes it slow as well, but "std::ios_base::sync_with_stdio(false);" turns it off, making cout faster. Do not use if you mix cout with other stuff
    https://stackoverflow.com/questions/2872543/printf-vs-cout-in-c

Make sure the executable C++ and the Python is both m64

Interesting way of counting how many 0 nibbles are in an unsigned 64 bit integer
https://stackoverflow.com/questions/38225571/count-number-of-zero-nibbles-in-an-unsigned-64-bit-integer

Brian Kernighan's algorithm
Interesting way of counting the number of 1s bits at Olog(n)
https://stackoverflow.com/questions/12380478/bits-counting-algorithm-brian-kernighan-in-an-integer-time-complexity

Make sure all your dependencies are there heh

Other Links
https://stackoverflow.com/questions/145270/calling-c-c-from-python
https://github.com/nneonneo/2048-ai/blob/master/2048.py#L71
https://stackoverflow.com/questions/5081875/ctypes-beginner
https://discuss.python.org/t/ctypes-can-not-load-dll-in-which-some-struct-has-constructor-or-destructor/60960